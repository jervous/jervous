1.在项目目录中，通过npm install multiparty进行安装必要组件 
npm install multiparty --save-dev 
 
2.app.js中添加 
app.use(bodyParser({uploadDir:'./uploadtemp'}));//设置上传临时文件夹 
//在与app.js同目录下创建uploadtemp文件夹 
 
<!----------------xheditor下ajax上传图片----------> 
1.客户端： 
<script type="text/javascript" src="/xheditor-1.2.2.min.js"></script> 
<script type="text/javascript" src="/xheditor_lang/zh-cn.js"></script> 
<script type="text/javascript"> 
$(pageInit); 
function pageInit() 
{ 
    $.extend(XHEDITOR.settings,{shortcuts:{'ctrl+enter':submitForm}}); 
    $('#content').xheditor({html5Upload:false,upMultiple:'1',upLinkUrl:"/uploadFile",upLinkExt:"zip,rar,txt",upImgUrl:"/uploadImg",upImgExt:"jpg,jpeg,gif,png",upFlashUrl:"/uploadFlash",upFlashExt:"swf",upMediaUrl:"/uploadMedia",upMediaExt:"wmv,avi,wma,mp3,mid"}); 
} 
function insertUpload(arrMsg) 
{console.log(arrMsg) 
    var i,msg; 
    for(i=0;i<arrMsg.length;i++) 
    { 
        msg=arrMsg[i]; 
        $("#uploadList").append('<option value="'+msg.id+'">'+msg.localname+'</option>'); 
    } 
} 
function submitForm(){$('#frmDemo').submit();} 
</script> 
 
<textarea id="content" name="content" cols="120" rows="9"></textarea> 
 
2.服务端： 
var multiparty = require('multiparty'); 
var util = require('util'); 
var fs = require('fs'); 
 
//-----图片上传 
router.post('/uploadImg',function(req,res){ 
    var form = new multiparty.Form(); 
    //设置编码 
    form.encoding = 'utf-8'; 
    //设置文件存储路径 
    form.uploadDir = "./uploadtemp/"; 
    //设置单文件大小限制 
    form.maxFilesSize = 2 * 1024 * 1024; 
    //form.maxFields = 1000;  设置所以文件的大小总和 
     
    form.parse(req, function(err, fields, files) { 
        uploadurl='/images/upload/' 
        file1 = files['filedata']; 
        paraname = file1[0].fieldName;  //参数名filedata 
        originalFilename = file1[0].originalFilename; //原始文件名 
        tmpPath = file1[0].path;//uploads\mrecQCv2cGlZbj-UMjNyw_Bz.txt 
        fileSize = file1[0].size; //文件大小 
         
        var timestamp=new Date().getTime(); //获取当前时间戳 
        uploadurl += timestamp+originalFilename 
        newPath= './public'+uploadurl; 
 
        var fileReadStream = fs.createReadStream(tmpPath); 
        var fileWriteStream = fs.createWriteStream(newPath); 
        fileReadStream.pipe(fileWriteStream); //管道流 
        fileWriteStream.on('close',function(){ 
               fs.unlinkSync(tmpPath);    //删除临时文件夹中的图片 
               console.log('copy over');  
               res.send('{"err":"","msg":"'+uploadurl+'"}')  
        }); 
    }); 
      //----------------------------------------- 
    //res.send('上传'); 
});   